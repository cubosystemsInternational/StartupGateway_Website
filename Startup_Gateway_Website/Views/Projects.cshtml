@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Web.Common.PublishedModels.Projects>
@using Umbraco.Cms.Web.Common.PublishedModels;
@using System.Net.Http;
@using Newtonsoft.Json;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Http;
@using System.Web;
@{
    var domain = "https://localhost:44371";
    Layout = "Master.cshtml";
    ViewBag.headerClass = "dark";
    var home = Umbraco.ContentAtRoot().FirstOrDefault() as Home;
    var curCulture = Model.GetCultureFromDomains();


    // Get the search term from the query string
    var queryString = ViewContext.HttpContext.Request.Query["search"].ToString();
    var searchTerm = HttpUtility.UrlDecode(queryString.TrimEnd('/'));
    var searchQuery = searchTerm.Replace("~", " ");
    var searchProjects = "";
    var currentPage = 1;
    var projectsPerPage = 2; // Change this value to adjust the number of projects per page
    var totalProjectCount = 0;
    var selectedIndustryId = 0;

    var pageQuery = ViewContext.HttpContext.Request.Query["page"].ToString();
    if (!string.IsNullOrWhiteSpace(pageQuery))
    {
        currentPage = int.Parse(pageQuery);
    }

    if (!string.IsNullOrWhiteSpace(searchQuery))
    {
        searchProjects = searchQuery;
    }
    var apiUrlIndustries = $"{domain}/api/Industry/GetAllIndustry";
    var apiUrlProjectsOfIndustries = $"{domain}/api/projects/GetAllProjectsOfIndustry";
    var apiUrl = $"{domain}/api/projects/GetAllProjectDetailsWithFilter?projectName=&companyName=&IndustryName={searchProjects}&IndustryId=&Page={currentPage}&PageSize={projectsPerPage}";

    dynamic projects = null;

    // Fetch data from the API
    using (var client = new HttpClient())
    {
        var response = await client.GetAsync(apiUrl);
        if (response.IsSuccessStatusCode)
        {
            var data = await response.Content.ReadAsStringAsync();
            dynamic inprojects = JsonConvert.DeserializeObject<dynamic>(data);
            projects = inprojects.projectDetails;
            totalProjectCount = inprojects.totalProjectCount;
        }
    }

    var totalPages = (int)Math.Ceiling((double)totalProjectCount / projectsPerPage);

    dynamic industries = null;
    // Fetch data from the API
    using (var client = new HttpClient())
    {
        var industriesRes = await client.GetAsync(apiUrlIndustries);

        if (industriesRes.IsSuccessStatusCode)
        {
            var industriesData = await industriesRes.Content.ReadAsStringAsync();
            industries = JsonConvert.DeserializeObject<dynamic>(industriesData);

        }
    }


    dynamic noOfProjectsOfIndustries = null;
    // Fetch data from the API
    using (var client = new HttpClient())
    {
        var noOfProjectsOfIndustriesRes = await client.GetAsync(apiUrlProjectsOfIndustries);

        if (noOfProjectsOfIndustriesRes.IsSuccessStatusCode)
        {
            var data = await noOfProjectsOfIndustriesRes.Content.ReadAsStringAsync();
            noOfProjectsOfIndustries = JsonConvert.DeserializeObject<dynamic>(data);

        }
    }




}


<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

<div class="about-us-page">
    <section class="section-1">
        <div class="title-padding container">
            <h1 class="title">@Model.PageDescription</h1>
            <div class="subtitle">
                @Model.SubDescription
            </div>
        </div>
    </section>
    <br>
    <!-- New Projects Section -->
    <section class="section-2">
        <div class="container">

<style>

</style>

<div class="row mb-4">
    <div class="col-md-12 search-container">
        <!--<i class="material-icons search-icon">search</i>  Material Icon for search -->
        <input type="text" id="searchInput" class="search-input" placeholder="Search for projects..." value="@searchQuery" >
        <button class="search-btn" id="searchBtn">Find</button>
    </div>
</div>




<!--newly added html-->


<div class="container">
    <div class="row">
    <aside class="col-md-3">

<div class="card">
    <article class="filter-group">
        <header class="card-header-filter">
                            <h6 class="title-filter">Industry </h6>

        </header>

        <div class="filter-content collapse show" id="collapse_2" style="">
                                    <div class="card-body">
                                        @* <label class="custom-control custom-checkbox d-flex flex-row"> *@
                                        @if (industries != null)
                                        {
                                            foreach (var industry in industries)
                                            {
                                                var industryId = industry.id;
                                                var num = noOfProjectsOfIndustries[industryId.ToString()];
                                                @if (num != 0)
                                                {
                                                    <div class="form-check d-flex align-items-center">
                                                        <input class="form-check-input" type="checkbox" value="@industryId" id="industryCheckbox@industryId" onchange="updateFilter()">
                                                        <label class="form-check-label mb-0" for="industryCheckbox@industryId">@industry.industryName</label>
                                                        <span class="badge badge-pill badge-dark ml-auto">@num</span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="form-check d-flex align-items-center">
                                                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                                                        <label class="form-check-label mb-0" for="flexCheckDefault">@industry.industryName</label>
                                                    </div>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <p>No industries found.</p>
                                        }
                                    </div>

    <!-- card-body.// -->
        </div>
    </article> <!-- filter-group .// -->
    <article class="filter-group">
        <header class="card-header-filter">
            <h6 class="title-filter">Project Value </h6>
        </header>
        <div class="filter-content collapse show" id="collapse_3" style="">
            <div class="card-body">
                                        @* <input type="range" class="custom-range" min="0" max="100" name=""> *@
                <div class="form-row" >
                    <div class="col-md-6">
                    <label>Min</label>
                    <input class="form-control" placeholder="$0" type="number" style="width: 100px "  >
                    </div>
                    <div class="col-md-6">
                    <label>Max</label>
                    <input class="form-control" placeholder="$1,0000" type="number" style="width: 100px " >
                    </div>
                </div> <!-- form-row.// -->
                <div style = " padding : 20px" ><button class="btn btn-block btn-primary" id="applyBtn" onclick = "handleApply()" >Apply</button></div>
            </div><!-- card-body.// -->
        </div>
    </article> <!-- filter-group .// -->
</div> <!-- card.// -->

    </aside>
    <main class="col-md-9">

<header class="border-bottom mb-4 pb-3">
        <div class="form-inline">
            <span class="mr-md-auto">32 Items found </span>
            <select class="mr-2 form-control">
                <option>Latest items</option>
                <option>Trending</option>
                <option>Most Popular</option>
                <option>Cheapest</option>
            </select>
                                @* <div class="btn-group">
				<a href="#" class="btn btn-outline-secondary" data-toggle="tooltip" title="" data-original-title="List view"> 
					<i class="fa fa-bars"></i></a>
				<a href="#" class="btn  btn-outline-secondary active" data-toggle="tooltip" title="" data-original-title="Grid view"> 
					<i class="fa fa-th"></i></a>
			</div> *@
        </div>
</header><!-- sect-heading -->


                            <div class="row" id="projectCards">
                            @if (projects != null)
                            {
                                foreach (var project in projects)
                                {
                                                                                                                                                    <br>
                                                                                                                                                        <div class="col-md-12 mb-3">
                                                                                                                                                        <div class="card mb-3">
                                                                                                                                        <div class="row g-0">
                                                                                                                                            <div class="col-md-6">
                                                                                                                                                <img src="@ViewBag.Domain/media/alhbhyy5/default.png" class="img-fluid rounded-start" alt="Project Image">
                                                                                                                                            </div>
                                                                                                                                            <div class="col-md-6">
                                                                                                                                                <div class="card-body">
                                                                                                                                                    <h5 class="card-title">@project.projectName</h5>
                                                                                                                                                    <p class="card-text"><strong>Valuation:</strong> $@project.projectValuation</p>
                                                                                                                                                    <p class="card-text"><strong>Description:</strong> @project.projectDescription</p>
                                                                                                                                                    <p class="card-text"><strong>Industry:</strong> @project.industry</p>
                                                                                                                                                    <p class="card-text"><strong>Founder:</strong> @project.founder</p>
                                                                                                                                                    <p class="card-text"><strong>Company:</strong> @project.companyName</p>
                                                                                                                                                    <a href="/project-details?id=@project.id" class="btn btn-primary view-details" data-id="@project.id" data-title="@project.projectName">View Details</a>
                                                                                                                                                </div>
                                                                                                                                            </div>
                                                                                                                                        </div>
                                                                                                                                    </div>
                                                                                                                                </div>

                                }
                            }
                            else
                            {
                                                                        <p>No projects found.</p>
                            }

            </div>
    </section>
    <!-- Pagination container -->
<!-- Pagination container -->
    <!-- Pagination container -->
  <div class="pagination-container">
    <nav aria-label="Page navigation sample"class = "nav-pagination">
        <!-- Previous button -->
        <li class="page-item" id="previousPage">
            <a class="page-link" href="#" onclick="changePage(currentPage - 1)" aria-label="Previous">
                <span aria-hidden="true">&laquo; Previous</span>
            </a>
        </li>

        <ul class="pagination justify-content-between" id="pagination">
            <!-- Pagination buttons will be dynamically inserted here -->
        </ul>
        
        <!-- Next button -->
        <li class="page-item" id="nextPage">
            <a class="page-link" href="#" onclick="changePage(currentPage + 1)" aria-label="Next">
                <span aria-hidden="true">Next &raquo;</span>
            </a>
        </li>
    </nav>
</div>



</div>

</div> <!-- row end.// -->




    </main>
    </div>
</div>


<!--newly added html ended-->
@section Scripts {
    <script>
        cDomain = '@ViewBag.Domain';
        let currentPage = 1;
        const projectsPerPage = 2;
        let totalProjectCount = 0;
        let selectedIndustries = [];

        /*async function fetchIndustries() {
            const domain = 'https://localhost:44371';
            try {
                const response = await fetch(`${domain}/api/Industry/GetAllIndustry`);
                if (response.ok) {
                    const industries = await response.json();
                    displayIndustries(industries);
                } else {
                    console.error('Failed to fetch industries.');
                }
            } catch (error) {
                console.error('Error fetching industries:', error);
            }
        }

        function displayIndustries(industries) {
            const industryFilterContent = document.getElementById('industryFilterContent');
            industryFilterContent.innerHTML = '';
            if (industries && industries.length > 0) {
                industries.forEach(industry => {
                    const industryId = industry.id;
                    const num = noOfProjectsOfIndustries[industryId.toString()];
                    const checkbox = `<div class="form-check d-flex align-items-center">
                                                                <input class="form-check-input" type="checkbox" value="${industryId}" id="industryCheckbox${industryId}" onchange="updateFilter()">
                                                                <label class="form-check-label mb-0" for="industryCheckbox${industryId}">${industry.industryName}</label>
                                                                <span class="badge badge-pill badge-dark ml-auto">${num}</span>
                                                            </div>`;
                    industryFilterContent.insertAdjacentHTML('beforeend', checkbox);
                });
            } else {
                industryFilterContent.innerHTML = '<p>No industries found.</p>';
            }
        }*/

        function updateFilter() {
            selectedIndustries = Array.from(document.querySelectorAll('.form-check-input:checked')).map(checkbox => checkbox.value);
            currentPage = 1; // Reset to first page when updating filter
            <!--fetchProjects();-->
        }
        
        function getCheckedIndustryIds() {
            var checkboxes = document.querySelectorAll('.industry-checkbox:checked');
            var checkedIds = [];
            checkboxes.forEach(function(checkbox) {
                checkedIds.push(checkbox.value);
            });
            return checkedIds;
        }

        function handleApply() {
            fetchProjects();
        }


        async function fetchProjects() {
            const domain = 'https://localhost:44371';
            const searchQuery = document.getElementById('searchInput').value.trim();
            const encodedSearchQuery = encodeURIComponent(searchQuery).replace(/%20/g, '+');
            const apiUrl = `${domain}/api/projects/GetAllProjectDetailsWithFilter?projectName=&companyName=&IndustryName=${encodedSearchQuery}&IndustryId=${selectedIndustries.join(',')}&Page=${currentPage}&PageSize=${projectsPerPage}`;

            try {
                const response = await fetch(apiUrl);
                if (response.ok) {
                    const projectsData = await response.json();
                    totalProjectCount = projectsData.totalProjectCount;
                    displayProjects(projectsData.projectDetails);
                    updatePagination();
                } else {
                    console.error('Failed to fetch projects from the API.');
                }
            } catch (error) {
                console.error('Error fetching projects:', error);
            }
        }

        function displayProjects(projects) {
            const projectCards = document.getElementById('projectCards');
            projectCards.innerHTML = '';
            if (projects && projects.length > 0) {
                projects.forEach(project => {
                    const projectCard = `<div class="col-md-12 mb-3">
                                                                <div class="card mb-3">
                                                                    <div class="row g-0">
                                                                        <div class="col-md-6">
                                                                                    <img src="${cDomain}/media/alhbhyy5/default.png" class="img-fluid rounded-start" alt="Project Image">
                                                                        </div>
                                                                        <div class="col-md-6">
                                                                            <div class="card-body">
                                                                                <h5 class="card-title">${project.projectName}</h5>
                                                                                <p class="card-text"><strong>Valuation:</strong> $${project.projectValuation}</p>
                                                                                <p class="card-text"><strong>Description:</strong> ${project.projectDescription}</p>
                                                                                <p class="card-text"><strong>Industry:</strong> ${project.industry}</p>
                                                                                <p class="card-text"><strong>Founder:</strong> ${project.founder}</p>
                                                                                <p class="card-text"><strong>Company:</strong> ${project.companyName}</p>
                                                                                <a href="/project-details?id=${project.id}" class="btn btn-primary view-details" data-id="${project.id}" data-title="${project.projectName}">View Details</a>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>`;
                    projectCards.insertAdjacentHTML('beforeend', projectCard);
                });
            } else {
                projectCards.innerHTML = '<p>No projects found.</p>';
            }
        }

        function updatePagination() {
            const totalPages = Math.ceil(totalProjectCount / projectsPerPage);
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = '';
            for (let i = 1; i <= totalPages; i++) {
                const pageLink = `<li class="page-item ${currentPage === i ? 'active' : ''}">
                                                            <a class="page-link" href="#" onclick="changePage(${i})">${i}</a>
                                                          </li>`;
                pagination.insertAdjacentHTML('beforeend', pageLink);
            }
        }

        window.changePage = function (page) {
            currentPage = page;
            fetchProjects();
        };

        document.addEventListener("DOMContentLoaded", function () {
            const domain = 'https://localhost:44371';

            document.getElementById('searchBtn').addEventListener('click', function () {
                currentPage = 1;
                fetchProjects();
            });

            async function fetchData() {
                //await fetchIndustries();
                await fetchProjects();
            }

            fetchData();
        });
    </script>
}


